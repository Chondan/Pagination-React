{"version":3,"sources":["components/CountryCard.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["CountryCard","country","code","region","name","className","height","common","LEFT_PAGE","RIGHT_PAGE","range","start","end","step","i","push","Pagination","props","fetchPageNumbers","currentPage","state","pageNeighbours","totalPages","centerPage","Math","ceil","startPage","endPage","hasRightArrow","filter","page","handleClick","setState","onPageChanged","handleMoveLeft","handleMoveRight","totalRecords","pageLimit","max","min","this","pages","aria-label","map","index","onClick","aria-hidden","Component","App","countries","currentCountries","bind","length","slice","Countries","findAll","data","getCurrentCountries","cca2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAiCeA,EA7BK,SAAC,GAEd,IADNC,EACK,EADLA,QAGQC,EAAoCD,EAApCC,KAFH,EAEuCD,EAA7BE,cAFV,MAEmB,KAFnB,IAEuCF,EAAdG,YAFzB,MAEgC,GAFhC,EAIL,OACC,sBAAKC,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,SACC,cAAC,IAAD,CAAMH,KAAMA,EAAMI,OAAO,SAE1B,sBAAKD,UAAU,eAAf,UACC,qBAAKA,UAAU,eAAf,SAA+BD,EAAKG,SACpC,qBAAKF,UAAU,iBAAf,SAAiCF,W,QCdlCK,EAAY,OACZC,EAAa,QAEbC,EAAQ,SAACC,EAAOC,GAIrB,IAJsC,IAAZC,EAAW,uDAAN,EAC3BC,EAAIH,EACFD,EAAQ,GAEPI,GAAKF,GACXF,EAAMK,KAAKD,GACXA,GAAKD,EAGN,OAAOH,GA2HOM,E,kDAvHd,WAAYC,GAAQ,IAAD,uBAClB,cAAMA,IAiBPC,iBAAmB,WAGlB,IAAMC,EAAc,EAAKC,MAAMD,YACzBE,EAAiB,EAAKA,eACtBC,EAAa,EAAKA,WAMxB,GAAIA,EAJmC,EAAjBD,EAAsB,EACT,EAGL,OAAOX,EAAM,EAAGY,GAI9C,IAAMC,EACLJ,GAAeK,KAAKC,KAAKH,EAAa,GACnCH,GAAe,EAAIE,EAAiB,EAAIA,EAAiBF,EACzDA,EAAc,GAAKG,EAAaA,EAAaD,EAAiB,EAAIF,EAEhEO,EAAYH,EAAaF,EACzBM,EAAUJ,EAAaF,EAGvBO,EAAgBN,EAAaK,EAAU,EAS7C,MAPW,CACV,EAJoBD,EAAY,EAKjBlB,EAAY,MAFjB,mBAGPE,EAAMgB,EAAWC,IAHV,CAIVC,EAAgBnB,EAAa,KAC7Ba,IAEYO,QAAO,SAAAC,GAAI,OAAIA,MAnDV,EAsDnBC,YAAc,SAACD,GACd,EAAKE,SAAS,CAAEb,YAAaW,IAC7B,EAAKb,MAAMgB,cAAcH,IAxDP,EA2DnBI,eAAiB,WAChB,EAAKF,UAAS,SAAAZ,GAAK,MAAK,CAAED,YAAaC,EAAMD,YAAc,MAC3D,EAAKF,MAAMgB,cAAc,EAAKb,MAAMD,YAAc,IA7DhC,EAgEnBgB,gBAAkB,WACjB,EAAKH,UAAS,SAAAZ,GAAK,MAAK,CAAED,YAAaC,EAAMD,YAAc,MAC3D,EAAKF,MAAMgB,cAAc,EAAKb,MAAMD,YAAc,IAlEhC,MAEkDF,EAA5DmB,oBAFU,MAEK,KAFL,IAEkDnB,EAAvCoB,iBAFX,MAEuB,GAFvB,IAEkDpB,EAAvBI,sBAF3B,MAE4C,EAF5C,SAIlB,EAAKgB,UAAiC,kBAAdA,EAAyBA,EAAY,GAC7D,EAAKD,aAAuC,kBAAjBA,EAA4BA,EAAe,EAGtE,EAAKf,eAA2C,kBAAnBA,EAC1BG,KAAKc,IAAI,EAAGd,KAAKe,IAAIlB,EAAgB,IACrC,EAEH,EAAKC,WAAaE,KAAKC,KAAK,EAAKW,aAAe,EAAKC,WAErD,EAAKjB,MAAQ,CAAED,YAAa,GAdV,E,qDAqET,IAAD,OAER,IAAKqB,KAAKJ,cAAoC,IAApBI,KAAKlB,WAAkB,OAAO,KAFhD,IAIAH,EAAgBqB,KAAKpB,MAArBD,YACFsB,EAAQD,KAAKtB,mBAEnB,OACC,cAAC,WAAD,UACC,qBAAKwB,aAAW,uBAAhB,SACC,oBAAIrC,UAAU,aAAd,SAEEoC,EAAME,KAAI,SAACb,EAAMc,GAChB,OAAId,IAAStB,EACZ,oBAAgBH,UAAU,YAA1B,SACe,uBAAMA,UAAU,YAAYqC,aAAW,WAAWG,QAAS,EAAKX,eAAhE,UACE,sBAAMY,cAAY,OAAlB,kBACA,sBAAMzC,UAAU,UAAhB,0BAHRuC,GAONd,IAASrB,EACZ,oBAAgBJ,UAAU,YAA1B,SACe,uBAAMA,UAAU,YAAYqC,aAAW,OAAOG,QAAS,EAAKV,gBAA5D,UACE,sBAAMW,cAAY,OAAlB,kBACA,sBAAMzC,UAAU,UAAhB,sBAHRuC,GAQG,oBAAgBvC,UAAS,mBAAec,IAAgBW,EAAO,UAAY,IAA3E,SACC,sBAAMzB,UAAU,YAAYwC,QAAU,kBAAM,EAAKd,YAAYD,IAA7D,SAAuEA,KAD/Dc,gB,GApGLG,aCiDVC,E,kDA5Dd,WAAY/B,GAAQ,IAAD,sBAClB,cAAMA,GADY,MAE6BA,EAAvCI,sBAFU,MAEO,EAFP,IAE6BJ,EAAnBoB,iBAFV,MAEsB,GAFtB,SAGlB,EAAKjB,MAAQ,CACZ6B,UAAW,GACXC,iBAAkB,GAClB/B,YAAa,EACbG,WAAY,EACZD,iBACAgB,aAED,EAAKJ,cAAgB,EAAKA,cAAckB,KAAnB,gBAXH,E,gEAcCF,EAAW9B,GAAc,IACpCkB,EAAcG,KAAKpB,MAAnBiB,UACR,MAAO,CACNa,iBAAkBD,EAAUG,OAASf,EAAYY,EAAUI,OAAOlC,EAAc,GAAKkB,EAAWlB,EAAckB,GAAaY,K,0CAK5H,IAAMA,EAAYK,IAAUC,UAAUC,KACtChB,KAAKR,SAAL,yBACCiB,aACGT,KAAKiB,oBAAoBR,EAAWT,KAAKpB,MAAMD,cAFnD,IAGCG,WAAY2B,EAAUG,Y,oCAIVjC,GAAc,IAAD,OAC1BqB,KAAKR,UAAS,SAAAZ,GACb,OAAO,eACH,EAAKqC,oBAAoBrC,EAAM6B,UAAW9B,S,+BAM/C,OACC,sBAAKd,UAAU,MAAf,UAEKmC,KAAKpB,MAAM6B,UAAUG,OAAS,GAC9B,cAAC,EAAD,CAAYhB,aAAcI,KAAKpB,MAAM6B,UAAUG,OAAQ/B,eAAgBmB,KAAKpB,MAAMC,eAAgBgB,UAAWG,KAAKpB,MAAMiB,UACvHJ,cAAeO,KAAKP,gBAGtB,qBAAK5B,UAAU,gBAAf,SAEEmC,KAAKpB,MAAM8B,iBAAiBE,OAAS,GAAKZ,KAAKpB,MAAM8B,iBAAiBP,KAAI,SAAA1C,GAAY,IACrEM,EAA2BN,EAAnCG,KAAQG,OAAUmD,EAAiBzD,EAAjByD,KAAMvD,EAAWF,EAAXE,OAChC,OAAO,cAAC,EAAD,CAAwBF,QAAS,CAAEC,KAAMwD,EAAMvD,SAAQC,KAAM,CAAEG,YAA7CmD,e,GApDjBX,aCMHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8d80c9ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Flag from 'react-world-flags';\n\nconst CountryCard = ({\n\tcountry\n}) => {\n\n\tconst { code , region = null, name = {} } = country;\n\n\treturn (\n\t\t<div className=\"country-card\">\n\t    \t<div className=\"country-flag\">\n\t\t    \t<Flag code={code} height=\"30\" />\n\t    \t</div>\n\t    \t<div className=\"country-info\">\n\t    \t\t<div className=\"country-name\">{name.common}</div>\n\t    \t\t<div className=\"country-region\">{region}</div>\n\t    \t</div>\n\t    </div>\n\t);\n}\n\nCountryCard.propTypes = {\n\tcountry: PropTypes.shape({\n\t\tcode: PropTypes.string.isRequired,\n\t\tregion: PropTypes.string.isRequired,\n\t\tname: PropTypes.shape({\n\t\t\tcommon: PropTypes.string.isRequired\n\t\t}).isRequired\n\t}).isRequired\n};\n\nexport default CountryCard;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nconst range = (start, end, step=1) => {\n\tlet i = start;\n\tconst range = [];\n\n\twhile (i <= end) {\n\t\trange.push(i);\n\t\ti += step;\n\t}\n\n\treturn range;\n}\n\nclass Pagination extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n\t\tthis.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n\t\tthis.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n\t\t// pageNeighbours can be: 0, 1, 2\n\t\tthis.pageNeighbours = typeof pageNeighbours === 'number'\n\t\t\t? Math.max(0, Math.min(pageNeighbours, 2))\n\t\t\t: 0;\n\n\t\tthis.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n\t\tthis.state = { currentPage: 1 };\n\t}\n\t\n\t// Generate page numbers from currentPage\n\tfetchPageNumbers = () => {\n\n\t\t// first < negh(start) negh cur negh negh(end) > last\n\t\tconst currentPage = this.state.currentPage;\n\t\tconst pageNeighbours = this.pageNeighbours;\n\t\tconst totalPages = this.totalPages;\n\n\t\tconst totalNumbers = (pageNeighbours * 2) + 3;\n\t\tconst totalBlocks = totalNumbers + 2;\n\n\t\t// if totalPages is too little\n\t\tif (totalPages < totalBlocks) return range(1, totalPages);\n\n\t\t// need to transform a currentPage to centerPage e.g. for currentPage 1, 2, 3 => the centerPage is 3 (neighbours = 1)\n\t\t// display -> 1 [2] 3 4 > 100, 1 < 3 [4] 5 > 100, 1 < 97 98 [99] 100\n\t\tconst centerPage = \n\t\t\tcurrentPage <= Math.ceil(totalPages / 2) \n\t\t\t? (currentPage <= 2 + pageNeighbours ? 2 + pageNeighbours : currentPage) // currentPage is on left-side\n\t\t\t: (currentPage + 2 >= totalPages ? totalPages - pageNeighbours - 1 : currentPage); // currentPage is on right-side\n\n\t\tconst startPage = centerPage - pageNeighbours;\n\t\tconst endPage = centerPage + pageNeighbours;\n\n\t\tconst hasLeftArrow = startPage > 2;\n\t\tconst hasRightArrow = totalPages - endPage > 1;\n\n\t\tconst pages = [\n\t\t\t1,\n\t\t\thasLeftArrow ? LEFT_PAGE : null,\n\t\t\t...range(startPage, endPage),\n\t\t\thasRightArrow ? RIGHT_PAGE : null,\n\t\t\ttotalPages\n\t\t];\n\t\treturn pages.filter(page => page);\n\t}\n\n\thandleClick = (page) => {\n\t\tthis.setState({ currentPage: page });\n\t\tthis.props.onPageChanged(page);\n\t}\n\n\thandleMoveLeft = () => {\n\t\tthis.setState(state => ({ currentPage: state.currentPage - 1}));\n\t\tthis.props.onPageChanged(this.state.currentPage - 1);\n\t}\n\n\thandleMoveRight = () => {\n\t\tthis.setState(state => ({ currentPage: state.currentPage + 1 }));\n\t\tthis.props.onPageChanged(this.state.currentPage + 1);\n\t}\n\n\trender() {\n\n\t\tif (!this.totalRecords || this.totalPages === 1) return null;\n\n\t\tconst { currentPage } = this.state;\n\t\tconst pages = this.fetchPageNumbers();\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<nav aria-label=\"Countries Pagination\">\n\t\t\t\t\t<ul className=\"pagination\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpages.map((page, index) => {\n\t\t\t\t\t\t\t\tif (page === LEFT_PAGE) return (\n\t\t\t\t\t\t\t\t\t<li key={index} className=\"page-item\">\n                  \t\t\t\t\t\t<span className=\"page-link\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    \t\t\t\t\t\t<span aria-hidden=\"true\">&laquo;</span>\n                    \t\t\t\t\t\t<span className=\"sr-only\">Previous</span>\n                  \t\t\t\t\t\t</span>\n                \t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (page === RIGHT_PAGE) return (\n\t\t\t\t\t\t\t\t\t<li key={index} className=\"page-item\">\n                  \t\t\t\t\t\t<span className=\"page-link\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    \t\t\t\t\t\t<span aria-hidden=\"true\">&raquo;</span>\n                    \t\t\t\t\t\t<span className=\"sr-only\">Next</span>\n                  \t\t\t\t\t\t</span>\n                \t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n\t\t\t\t\t                \t<span className=\"page-link\" onClick={ () => this.handleClick(page) }>{ page }</span>\n\t\t\t\t\t                </li>\n\t\t\t\t\t            );\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nPagination.propTypes = {\n\ttotalRecords: PropTypes.number.isRequired,\n\tpageLimit: PropTypes.number,\n\tpageNeighbours: PropTypes.number,\n\tonPageChanged: PropTypes.func\n}\n\nexport default Pagination;","import React, { Component } from 'react';\n// import './App.css';\nimport './App.scss';\nimport Countries from 'countries-api';\nimport { CountryCard, Pagination } from './components';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { pageNeighbours = 2, pageLimit = 18 } = props;\n\t\tthis.state = {\n\t\t\tcountries: [],\n\t\t\tcurrentCountries: [],\n\t\t\tcurrentPage: 1,\n\t\t\ttotalPages: 0,\n\t\t\tpageNeighbours,\n\t\t\tpageLimit\n\t\t}\n\t\tthis.onPageChanged = this.onPageChanged.bind(this);\n\t}\n\n\tgetCurrentCountries(countries, currentPage) {\n\t\tconst { pageLimit } = this.state;\n\t\treturn {\n\t\t\tcurrentCountries: countries.length > pageLimit ? countries.slice((currentPage - 1) * pageLimit, currentPage * pageLimit) : countries\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst countries = Countries.findAll().data\n\t\tthis.setState({\n\t\t\tcountries,\n\t\t\t...this.getCurrentCountries(countries, this.state.currentPage),\n\t\t\ttotalPages: countries.length\n\t\t});\n\t}\n\n\tonPageChanged(currentPage) {\n\t\tthis.setState(state => {\n\t\t\treturn {\n\t\t\t\t...this.getCurrentCountries(state.countries, currentPage)\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t    \t{\n\t\t    \t\tthis.state.countries.length > 0 &&\n\t\t    \t\t<Pagination totalRecords={this.state.countries.length} pageNeighbours={this.state.pageNeighbours} pageLimit={this.state.pageLimit} \n\t\t\t    \t\tonPageChanged={this.onPageChanged}\n\t\t\t    \t/>\n\t\t\t    }\n\t\t    \t<div className=\"countries-box\">\n\t\t\t    \t{\n\t\t\t    \t\tthis.state.currentCountries.length > 0 && this.state.currentCountries.map(country => {\n\t\t\t    \t\t\tconst { name: { common }, cca2, region } = country;\n\t\t\t    \t\t\treturn <CountryCard key={cca2} country={{ code: cca2, region, name: { common } }} />;\n\t\t    \t\t\t})\n\t\t\t    \t}\n\t\t    \t</div>\n\t\t    </div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}